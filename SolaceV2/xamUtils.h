#pragma once
#include "stdafx.h"

namespace Utilities {

    // credit clement dreptin

    typedef enum Games
    {
        GAME_COD2 = 0x415607D1,
        GAME_COD3 = 0x415607E1,
        GAME_COUNTERSTRIKE = 0x5841125A,
        GAME_CRACKDOWN = 0x4D5307DC,
        GAME_CRACKDOWN2 = 0x4D5308BC,
        //GAME_CRYSIS3_DEV_130 = 0x454108E3,
        GAME_CRYSIS = 0x45410968,
        GAME_CRYSIS2 = 0x454108E3,
        GAME_CRYSIS3_RETAIL = 0x4541098E,
        GAME_DASHBOARD = 0xFFFE07D1,
        GAME_DASHLAUNCH = 0xFFFF011D,
        GAME_DEADRISING2 = 0x434307EC,
        GAME_DOOM3BFG = 0x425307F1,
        GAME_ENEMYTERRITORY = 0x415607DF,
        GAME_LEFT4DEAD2 = 0x454108D4,
        GAME_MAFIA2 = 0x545407E6,
        //GAME_RIDE = 0x513107D8,
        GAME_SAINTSROW = 0x545107D1,
        GAME_SAINTSROW2 = 0x545107FC,
        GAME_SAINTSROW3 = 0x5451086D,
        GAME_SAINTSROW4 = 0x4B4D07F6,
        GAME_SAINTSROWGOH = 0x4B4D0800,
        GAME_SLEEPINGDOGS = 0x53510811,
        GAME_SONICADVENTURE = 0x58410A25,
        GAME_SONICGENERATIONS = 0x53450848,
        //GAME_THEBOURNECONSPIRACY = 0x565507D4,
        GAME_THECLUB = 0x534507DD,
        //GAME_QUAKE4 = 0x4EF8B168
        GAME_XEXMENU = 0xFFFF0055
    };

    typedef enum _XNOTIFYQUEUEUI_TYPE
    {
        XNOTIFYUI_TYPE_FRIENDONLINE = 0,
        XNOTIFYUI_TYPE_GAMEINVITE = 1,
        XNOTIFYUI_TYPE_FRIENDREQUEST = 2,
        XNOTIFYUI_TYPE_GENERIC = 3,
        XNOTIFYUI_TYPE_MULTIPENDING = 4,
        XNOTIFYUI_TYPE_PERSONALMESSAGE = 5,
        XNOTIFYUI_TYPE_SIGNEDOUT = 6,
        XNOTIFYUI_TYPE_SIGNEDIN = 7,
        XNOTIFYUI_TYPE_SIGNEDINLIVE = 8,
        XNOTIFYUI_TYPE_SIGNEDINNEEDPASS = 9,
        XNOTIFYUI_TYPE_CHATREQUEST = 10,
        XNOTIFYUI_TYPE_CONNECTIONLOST = 11,
        XNOTIFYUI_TYPE_DOWNLOADCOMPLETE = 12,
        XNOTIFYUI_TYPE_SONGPLAYING = 13,
        XNOTIFYUI_TYPE_PREFERRED_REVIEW = 14,
        XNOTIFYUI_TYPE_AVOID_REVIEW = 15,
        XNOTIFYUI_TYPE_COMPLAINT = 16,
        XNOTIFYUI_TYPE_CHATCALLBACK = 17,
        XNOTIFYUI_TYPE_REMOVEDMU = 18,
        XNOTIFYUI_TYPE_REMOVEDGAMEPAD = 19,
        XNOTIFYUI_TYPE_CHATJOIN = 20,
        XNOTIFYUI_TYPE_CHATLEAVE = 21,
        XNOTIFYUI_TYPE_GAMEINVITESENT = 22,
        XNOTIFYUI_TYPE_CANCELPERSISTENT = 23,
        XNOTIFYUI_TYPE_CHATCALLBACKSENT = 24,
        XNOTIFYUI_TYPE_MULTIFRIENDONLINE = 25,
        XNOTIFYUI_TYPE_ONEFRIENDONLINE = 26,
        XNOTIFYUI_TYPE_ACHIEVEMENT = 27,
        XNOTIFYUI_TYPE_HYBRIDDISC = 28,
        XNOTIFYUI_TYPE_MAILBOX = 29,
        XNOTIFYUI_TYPE_VIDEOCHATINVITE = 30,
        XNOTIFYUI_TYPE_DOWNLOADCOMPLETEDREADYTOPLAY = 31,
        XNOTIFYUI_TYPE_CANNOTDOWNLOAD = 32,
        XNOTIFYUI_TYPE_DOWNLOADSTOPPED = 33,
        XNOTIFYUI_TYPE_CONSOLEMESSAGE = 34,
        XNOTIFYUI_TYPE_GAMEMESSAGE = 35,
        XNOTIFYUI_TYPE_DEVICEFULL = 36,
        XNOTIFYUI_TYPE_CHATMESSAGE = 38,
        XNOTIFYUI_TYPE_MULTIACHIEVEMENTS = 39,
        XNOTIFYUI_TYPE_NUDGE = 40,
        XNOTIFYUI_TYPE_MESSENGERCONNECTIONLOST = 41,
        XNOTIFYUI_TYPE_MESSENGERSIGNINFAILED = 43,
        XNOTIFYUI_TYPE_MESSENGERCONVERSATIONMISSED = 44,
        XNOTIFYUI_TYPE_FAMILYTIMERREMAINING = 45,
        XNOTIFYUI_TYPE_CONNECTIONLOSTRECONNECT = 46,
        XNOTIFYUI_TYPE_EXCESSIVEPLAYTIME = 47,
        XNOTIFYUI_TYPE_PARTYJOINREQUEST = 49,
        XNOTIFYUI_TYPE_PARTYINVITESENT = 50,
        XNOTIFYUI_TYPE_PARTYGAMEINVITESENT = 51,
        XNOTIFYUI_TYPE_PARTYKICKED = 52,
        XNOTIFYUI_TYPE_PARTYDISCONNECTED = 53,
        XNOTIFYUI_TYPE_PARTYCANNOTCONNECT = 56,
        XNOTIFYUI_TYPE_PARTYSOMEONEJOINED = 57,
        XNOTIFYUI_TYPE_PARTYSOMEONELEFT = 58,
        XNOTIFYUI_TYPE_GAMERPICTUREUNLOCKED = 59,
        XNOTIFYUI_TYPE_AVATARAWARDUNLOCKED = 60,
        XNOTIFYUI_TYPE_PARTYJOINED = 61,
        XNOTIFYUI_TYPE_REMOVEDUSB = 62,
        XNOTIFYUI_TYPE_PLAYERMUTED = 63,
        XNOTIFYUI_TYPE_PLAYERUNMUTED = 64,
        XNOTIFYUI_TYPE_CHATMESSAGE2 = 65,
        XNOTIFYUI_TYPE_KINECTCONNECTED = 66,
        XNOTIFYUI_TYPE_KINECTBREAK = 67,
        XNOTIFYUI_TYPE_ETHERNET = 68,
        XNOTIFYUI_TYPE_KINECTPLAYERRECOGNIZED = 69,
        XNOTIFYUI_TYPE_CONSOLESHUTTINGDOWNSOONALERT = 70,
        XNOTIFYUI_TYPE_PROFILESIGNEDINELSEWHERE = 71,
        XNOTIFYUI_TYPE_LASTSIGNINELSEWHERE = 73,
        XNOTIFYUI_TYPE_KINECTDEVICEUNSUPPORTED = 74,
        XNOTIFYUI_TYPE_WIRELESSDEVICETURNOFF = 75,
        XNOTIFYUI_TYPE_UPDATING = 76,
        XNOTIFYUI_TYPE_SMARTGLASSAVAILABLE = 77,
    } XNOTIFYQUEUEUI_TYPE;

    class Xam
    {
    public:
        static void XNotify(const std::string& text, XNOTIFYQUEUEUI_TYPE type = XNOTIFYUI_TYPE_PREFERRED_REVIEW);

        // Note: Blocks the current thread while waiting for the user to finish typing.
        static uint32_t ShowKeyboard(const wchar_t* title, const wchar_t* description, const wchar_t* defaultText, std::string& result, size_t maxLength = 512, uint32_t keyboardType = VKBD_DEFAULT);

        // Note: Blocks the current thread while waiting for the user to close the message box.
        static uint32_t ShowMessageBox(const wchar_t* title, const wchar_t* text, const wchar_t** buttonLabels, size_t numberOfButtons, uint32_t* pButtonPressedIndex = nullptr, uint32_t messageBoxType = XMB_ALERTICON, uint32_t focusedButtonIndex = 0);

        static uint32_t GetCurrentTitleId();

        static bool IsAddressValid(void* pAddress);

        static void Reboot();

        static HRESULT MountHdd();

        static void PulseController();
    };
}